@model WebCourses.Models.Answer
@using Microsoft.AspNetCore.Identity

@inject SignInManager<User> SignInManager
@inject UserManager<User> UserManager
@{
    ViewData["Title"] = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Create</h2>

<h4>Answer</h4>
<hr />
<div class="row">
    @if (SignInManager.IsSignedIn(User) && await UserManager.IsInRoleAsync(await UserManager.GetUserAsync(User), "Teacher"))
    {
        <div class="col-md-4">
            <form asp-action="Create" asp-route-courseId ="@ViewContext.RouteData.Values["courseId"]" asp-route-testId="@ViewContext.RouteData.Values["testId"]" asp-route-questionId="@ViewContext.RouteData.Values["questionId"]">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <div class="form-group">
                    <label asp-for="Content" class="control-label"></label>
                    <input asp-for="Content" class="form-control" />
                    <span asp-validation-for="Content" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <div class="checkbox">
                        <label>
                            @if (ViewBag.CorrectAnswerCount == 0 && ViewBag.QuestionType == Question.QuestionType.SingleAnswer)
                            {
                                <p>First, create correct answer</p>
                                <input asp-for="Correct" type="hidden" value="true" />
                            }
                            else if (ViewBag.QuestionType == Question.QuestionType.SingleAnswer && ViewBag.CorrectAnswerCount > 0)
                            {
                                <p>Create incorrect answer</p>
                                <input asp-for="Correct" type="hidden" value="false" />
                            }
                            else
                            {
                                <input asp-for="Correct" /> @Html.DisplayNameFor(model => model.Correct)
                            }
                        </label>
                    </div>
                </div>
                <div class="form-group">
                    <input type="submit" value="Create" class="btn btn-default" />
                </div>
            </form>
        </div>
    }
    </div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
