@model WebCourses.Models.Course
@using Microsoft.AspNetCore.Identity
@using WebCourses.Data;

@inject SignInManager<User> SignInManager
@inject UserManager<User> UserManager
@inject ApplicationDbContext _context

@{
    ViewData["Title"] = "Details";
}

<h2>Details</h2><br />

<div>
    <h4>@Html.DisplayFor(model => model.Title)</h4>
    <hr />
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.User)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.User.Email)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.Description)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Description)
        </dd>
    </dl>
</div>
@*<div>
        <a asp-action="Edit" asp-route-id="@Model.Id">Edit</a> |
        <a asp-action="Index">Back to List</a>
    </div>*@
@if (SignInManager.IsSignedIn(User) && await UserManager.IsInRoleAsync(await UserManager.GetUserAsync(User), "Teacher"))
{
    <br>
    <h5><b>Students:</b> </h5>
    <ul class="list-group">
        @foreach (var courseUser in @Model.CourseUsers)
        {
            @if (courseUser.Confirmed == true)
            {
                <a asp-action="Details" asp-controller="Students" asp-route-courseId="@Model.Id" asp-route-studentId="@courseUser.UserId" class="list-group-item list-group-item-action flex-column align-items-start">
                    @courseUser.User.Email
                </a>
            }
        }
    </ul>

    <h5><b>Not confirmed students: </b></h5>
    @foreach (var courseUser in @Model.CourseUsers)
    {
        @if (courseUser.Confirmed == false)
        {
            <form class="form-inline" method="post" action="/Courses/Confirm">
                <input type="hidden" value="@Model.Id" name="courseId" />
                <input type="hidden" value="@courseUser.UserId" name="userId" />
                <label class="mr-sm-2 text-primary" for="confirmation">@courseUser.User.Email</label>
                <select id="confirmation" class="form-control" name="confirmation">
                    <option value="false">Reject</option>
                    <option value="true">Confirm</option>
                </select>
                <button type="submit" class="btn btn-primary align-right">
                    Press
                </button>
            </form>
            <br />
        }
    }
    <a asp-action="Index" asp-controller="Tests" asp-route-courseId="@Model.Id" class="btn btn-primary pull-right">Manage tests</a>
    <br />

}

@if (SignInManager.IsSignedIn(User) && await UserManager.IsInRoleAsync(await UserManager.GetUserAsync(User), "Student"))
{
    @if (Model.CourseUsers.Where(cu => cu.UserId == @UserManager.GetUserId(User)).First().Confirmed == false)
    {
        <strong>You are not confirmed</strong>
    }
    else
    {
        <strong>Available tests: </strong>
        <div class="list-group">
        @foreach (var test in Model.Tests)
        {
            User currentUser = await UserManager.GetUserAsync(User);
            var testResult = _context.UserTestResults.FirstOrDefault(utr => utr.TestId == test.Id && utr.UserId == currentUser.Id);
            var today = DateTime.Now.ToLocalTime();
            var deadline = test.Deadline.HasValue ? test.Deadline.Value : DateTime.MaxValue;
            var release = test.ReleaseDate.HasValue ? test.ReleaseDate.Value : DateTime.MaxValue;
            if (deadline > today && release < today)
            {
            <div class="list-group-item list-group-item-action">
                <strong>@test.Name</strong>
                @if (testResult != null)
                {
                    double percent = testResult.PointsCount / (double)test.Questions.Count * 100;
                    <text> your result: @percent % </text>
                    @if (!testResult.Checked)
                    {
                        <text> (open questions wait for teacher's mark) </text>
                    }
                    <div class="progress">
                        <div class="progress-bar" role="progressbar" style="width: @percent%" aria-valuenow=@percent aria-valuemin="0" aria-valuemax="100"></div>
                    </div>
                }
                else
                {
                    <a asp-action="Solve" asp-controller="Tests" asp-route-courseId="@Model.Id" asp-route-testId="@test.Id" class="btn btn-success btn-block"> Solve </a>
                }
            </div>
            }
        }
        </div>
    }
}