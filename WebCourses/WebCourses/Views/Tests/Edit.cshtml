@model WebCourses.Models.Test
@using Microsoft.AspNetCore.Identity

@inject SignInManager<User> SignInManager
@inject UserManager<User> UserManager
@{
    ViewData["Title"] = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Edit</h2>
<h4>Test</h4>
<hr />
@if (SignInManager.IsSignedIn(User) && await UserManager.IsInRoleAsync(await UserManager.GetUserAsync(User), "Teacher"))
{
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit" asp-controller="Tests" asp-route-courseId="@Model.CourseId" asp-route-testId="@Model.Id">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="Id" />
            <div class="form-group">
                <label asp-for="Name" class="control-label"></label>
                <input asp-for="Name" class="form-control" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Description" class="control-label"></label>
                <input asp-for="Description" class="form-control" />
                <span asp-validation-for="Description" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="ReleaseDate" class="control-label"></label>
                <input asp-for="ReleaseDate" class="form-control" />
                <span asp-validation-for="ReleaseDate" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Deadline" class="control-label"></label>
                <input asp-for="Deadline" class="form-control" />
                <span asp-validation-for="Deadline" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Save test" class="btn btn-default" />
                <a asp-action="Delete" asp-controller="Tests" asp-route-testId="@Model.Id" asp-route-courseId="@Model.CourseId" class="btn btn-danger">Delete</a>
            </div>
        </form>
    </div>

</div>

    @if (Model.Questions.Any())
    {
        <p>Click to edit question:</p>
        @await Html.PartialAsync("_QuestionsList", Model.Questions)
    }

    <a asp-action="Index" asp-controller="Questions" asp-route-courseId="@Model.CourseId" asp-route-testId="@Model.Id" class="btn btn-primary pull-right" role="button">Create question</a>
    }
    <a asp-action="Details" asp-controller="Tests" asp-route-courseId="@Model.CourseId" asp-route-testId="@Model.Id">Come back to test details...</a>

    @section Scripts {
        @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    }
